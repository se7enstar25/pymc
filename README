PyMC -- Markov chain Monte Carlo in Python

Bayesian estimation, particularly using Markov chain Monte Carlo (MCMC), is an increasingly relevant approach to statistical estimation. However, few statistical software packages implement MCMC samplers, and they are non-trivial to code by hand. PyMC is a python module that implements the Metropolis-Hastings algorithm as a python class, and is extremely flexible and applicable to a large suite of problems. PyMC includes methods for summarizing output, plotting, goodness-of-fit and convergence diagnostics.

Author: Christopher Fonnesbeck (chris@trichech.us)

Installation Prerequisites:
---------------------------

1. Python version 2.4 or later (http://python.org). Users are reccomended to install the ActiveState edition (http://www.activestate.com/Products/ActivePython/). 

2. FORTRAN and C compilers, preferrably g77 and gcc, respectively.

3. Numpy 0.9 or later (http://numeric.scipy.org/).

4. Matplotlib version 0.8 or later (http://http://matplotlib.sourceforge.net).


Installation Instructions:
--------------------------

If you are reading this, you have likely untar/unzipped the PyMC archive. Move to the archive directory and type:

python setup.py install

If you are running Windows, you may have to use a modified install command:

python setup.py build --compiler=mingw32 install

to force your system to use the GNU compiler, rather than Visual C.

If there are no errors, the installation was probably successful. Start python and try importing PyMC:

>>> import PyMC

Once the module has been imported, try running the test example:

>>> PyMC.MCMC.test()

This estimates the switchpoint between two data distributions within a time series of coal mining disasters in the UK. If successful, the test should iterate 10000 times and produce some output.


-- Chris Fonnesbeck
