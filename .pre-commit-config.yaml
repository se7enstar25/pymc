exclude: ^(docs/logos|pymc3/examples/data)/
repos:
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v3.3.0
  hooks:
    -   id: check-merge-conflict
    -   id: check-toml
    -   id: check-yaml
    -   id: debug-statements
    -   id: end-of-file-fixer
    -   id: no-commit-to-branch
        args: [--branch, master]
    -   id: requirements-txt-fixer
        exclude: ^requirements-dev\.txt$
    -   id: trailing-whitespace
- repo: https://github.com/nbQA-dev/nbQA
  rev: 0.5.4
  hooks:
    - id: nbqa-black
      additional_dependencies: [black==20.8b1]
    - id: nbqa-isort
      additional_dependencies: [isort==5.6.4]
    - id: nbqa-pyupgrade
      additional_dependencies: [pyupgrade==2.7.4]
- repo: https://github.com/PyCQA/isort
  rev: 5.6.4
  hooks:
    - id: isort
      name: isort
- repo: https://github.com/asottile/pyupgrade
  rev: v2.7.4
  hooks:
    - id: pyupgrade
      args: [--py36-plus]
- repo: https://github.com/psf/black
  rev: 20.8b1
  hooks:
    - id: black
- repo: https://github.com/PyCQA/pylint
  rev: pylint-2.6.0
  hooks:
    - id: pylint
      args: [--rcfile=.pylintrc]
      files: ^pymc3/
- repo: local
  hooks:
    - id: watermark
      args: [--negate, --multiline]
      entry: '%load_ext watermark.*%watermark -n -u -v -iv -w'
      language: pygrep
      minimum_pre_commit_version: 2.8.0
      name: Check notebooks have watermark (see Jupyter style guide from PyMC3 Wiki)
      types: [jupyter]
    - id: check-toc
      entry: python scripts/check_toc_is_complete.py
      language: python
      name: Check all notebooks appear in table of contents
      types: [jupyter]
    - id: check-no-tests-are-ignored
      entry: python scripts/check_all_tests_are_covered.py
      files: ^\.github/workflows/pytest\.yml$
      language: python
      name: Check no tests are ignored
      pass_filenames: false
    - id: conda-env-sort
      additional_dependencies: [pyyaml]
      entry: python scripts/sort_conda_envs.py
      files: ^conda-envs/
      language: python
      name: Sort dependencies in conda envs
      types: [yaml]
    - id: pip-from-conda
      additional_dependencies: [pyyaml]
      entry: python scripts/generate_pip_deps_from_conda.py
      files: ^conda-envs/
      language: python
      name: Generate pip dependency from conda
    - id: no-relative-imports
      name: No relative imports
      entry: from \.[\.\w]* import
      types: [python]
      language: pygrep
